.. table:: :py:class:`typepy.Infinity`: :py:attr:`~typepy.Infinity.strict_level` = 0

    ========================================  ==================  ==================  =========
                     Method                    ``float("inf")``     ``"Infinity"``     ``0.1`` 
    ========================================  ==================  ==================  =========
    :py:meth:`~.type.Infinity.is_type`        ``True``            ``True``            ``False``
    :py:meth:`~.type.Infinity.validate`       NOP [#f1]_          NOP [#f1]_          E [#f2]_ 
    :py:meth:`~.type.Infinity.convert`        ``Decimal("inf")``  ``Decimal("inf")``  E [#f2]_ 
    :py:meth:`~.type.Infinity.try_convert`    ``Decimal("inf")``  ``Decimal("inf")``  ``None`` 
    :py:meth:`~.type.Infinity.force_convert`  ``Decimal("inf")``  ``Decimal("inf")``        0.1
    ========================================  ==================  ==================  =========


.. table:: :py:class:`typepy.Infinity`: :py:attr:`~typepy.Infinity.strict_level` = 1

    ========================================  ==================  ==================  =========
                     Method                    ``float("inf")``     ``"Infinity"``     ``0.1`` 
    ========================================  ==================  ==================  =========
    :py:meth:`~.type.Infinity.is_type`        ``True``            ``False``           ``False``
    :py:meth:`~.type.Infinity.validate`       NOP [#f1]_          E [#f2]_            E [#f2]_ 
    :py:meth:`~.type.Infinity.convert`        ``Decimal("inf")``  E [#f2]_            E [#f2]_ 
    :py:meth:`~.type.Infinity.try_convert`    ``Decimal("inf")``  ``None``            ``None`` 
    :py:meth:`~.type.Infinity.force_convert`  ``Decimal("inf")``  ``Decimal("inf")``        0.1
    ========================================  ==================  ==================  =========


